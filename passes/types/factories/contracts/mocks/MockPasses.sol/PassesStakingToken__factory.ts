/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  PassesStakingToken,
  PassesStakingTokenInterface,
} from "../../../../contracts/mocks/MockPasses.sol/PassesStakingToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_passes",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "passes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346200036f57601f90601f196001600160401b0362000f5638819003858101841685018381118682101762000273578592829160405283396020948591810103126200036f5751936001600160a01b03851685036200036f576200006462000374565b601481527f506173736573205374616b696e6720546f6b656e000000000000000000000000858201526200009762000374565b916007835266109493164b54d560ca1b86840152815192848411620002735760039384546001948582811c9216801562000364575b8a8310146200034e578185849311620002f8575b508990858311600114620002955760009262000289575b505060001982871b1c191690841b1784555b8051948511620002735760049687548481811c9116801562000268575b82821014620002535783811162000208575b50809286116001146200019c57508495509084929160009562000190575b50501b92600019911b1c19161790555b608052604051610bc1908162000395823960805181818161011e0152818161024f015261052b0152f35b01519350388062000156565b939295859081168860005285600020956000905b89838310620001ed5750505010620001d2575b50505050811b01905562000166565b01519060f884600019921b161c1916905538808080620001c3565b858701518955909701969485019488935090810190620001b0565b88600052816000208480890160051c820192848a1062000249575b0160051c019085905b8281106200023c57505062000138565b600081550185906200022c565b9250819262000223565b602289634e487b7160e01b6000525260246000fd5b90607f169062000126565b634e487b7160e01b600052604160045260246000fd5b015190503880620000f7565b908987941691886000528b6000209260005b8d828210620002e15750508411620002c8575b505050811b01845562000109565b015160001983891b60f8161c19169055388080620002ba565b8385015186558a97909501949384019301620002a7565b90915086600052896000208580850160051c8201928c861062000344575b918891869594930160051c01915b82811062000334575050620000e0565b6000815585945088910162000324565b9250819262000316565b634e487b7160e01b600052602260045260246000fd5b91607f1691620000cc565b600080fd5b60408051919082016001600160401b03811183821017620002735760405256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146107a657508163095ea7b31461077c57816318160ddd1461075d57816323b872dd14610693578163313ce56714610677578163395093511461062757816340c10f191461050057816370a08231146104c957816395d89b41146103aa5781639dc29fac14610225578163a457c2d71461017d57508063a9059cbb1461014d578063b8ee52891461010a5763dd62ed3e146100bf57600080fd5b34610106578060031936011261010657806020926100db6108c7565b6100e36108e2565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5034610106578160031936011261010657517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461010657806003193601126101065760209061017661016c6108c7565b602435903361091b565b5160018152f35b905082346102225782600319360112610222576101986108c7565b918360243592338152600160205281812060018060a01b03861682526020522054908282106101d1576020856101768585038733610a89565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b839150346101065782600319360112610106576102406108c7565b602435906001600160a01b03907f0000000000000000000000000000000000000000000000000000000000000000821633036103705716918215610323578284528360205284842054908282106102d557508184957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef936020938688528785520381872055816002540360025551908152a380f35b608490602087519162461bcd60e51b8352820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152fd5b608490602086519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b855162461bcd60e51b8152602081860152601460248201527327b7363c902830b9b9b2b99031b0b710313ab93760611b6044820152606490fd5b838334610106578160031936011261010657805190828454600181811c908083169283156104bf575b60209384841081146104ac57838852908115610490575060011461043b575b505050829003601f01601f191682019267ffffffffffffffff841183851017610428575082918261042492528261087e565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b83851061047c57505050508301018580806103f2565b805488860183015293019284908201610466565b60ff1916878501525050151560051b84010190508580806103f2565b634e487b7160e01b895260228a52602489fd5b91607f16916103d3565b5050346101065760203660031901126101065760209181906001600160a01b036104f16108c7565b16815280845220549051908152f35b9190503461062357806003193601126106235761051b6108c7565b60243591906001600160a01b03907f0000000000000000000000000000000000000000000000000000000000000000821633036105e957169283156105a757506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9261058d87956002546108f8565b60025585855284835280852082815401905551908152a380f35b6020606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b825162461bcd60e51b8152602081870152601460248201527313db9b1e4814185cdcd95cc818d85b881b5a5b9d60621b6044820152606490fd5b8280fd5b50503461010657806003193601126101065761017660209261067061064a6108c7565b338352600186528483206001600160a01b038216845286529184902054602435906108f8565b9033610a89565b5050346101065781600319360112610106576020905160128152f35b83915034610106576060366003190112610106576106af6108c7565b6106b76108e2565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036106f1575b60208661017687878761091b565b84821061071a575091839161070f6020969561017695033383610a89565b9193948193506106e3565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101065781600319360112610106576020906002549051908152f35b50503461010657806003193601126101065760209061017661079c6108c7565b6024359033610a89565b8490843461062357826003193601126106235782600354600181811c90808316928315610874575b60209384841081146104ac57838852908115610490575060011461081e57505050829003601f01601f191682019267ffffffffffffffff841183851017610428575082918261042492528261087e565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83851061086057505050508301018580806103f2565b80548886018301529301928490820161084a565b91607f16916107ce565b6020808252825181830181905290939260005b8281106108b357505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610891565b600435906001600160a01b03821682036108dd57565b600080fd5b602435906001600160a01b03821682036108dd57565b9190820180921161090557565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215610a3657169182156109e55760008281528060205260408120549180831061099157604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215610b3a5716918215610aea5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea2646970667358221220af456526f31761022833c7003cdfa995fbc097707ee3681f637a96264c371b7264736f6c63430008140033";

type PassesStakingTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PassesStakingTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PassesStakingToken__factory extends ContractFactory {
  constructor(...args: PassesStakingTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _passes: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_passes, overrides || {});
  }
  override deploy(
    _passes: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_passes, overrides || {}) as Promise<
      PassesStakingToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PassesStakingToken__factory {
    return super.connect(runner) as PassesStakingToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PassesStakingTokenInterface {
    return new Interface(_abi) as PassesStakingTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PassesStakingToken {
    return new Contract(address, _abi, runner) as unknown as PassesStakingToken;
  }
}
