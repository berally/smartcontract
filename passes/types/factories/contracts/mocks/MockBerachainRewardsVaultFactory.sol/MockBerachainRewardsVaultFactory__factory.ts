/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockBerachainRewardsVaultFactory,
  MockBerachainRewardsVaultFactoryInterface,
} from "../../../../contracts/mocks/MockBerachainRewardsVaultFactory.sol/MockBerachainRewardsVaultFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
    ],
    name: "createRewardsVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761018b908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c6301a076171461002a57600080fd5b346100ab5760203660031901126100ab576001600160a01b0390600435828116036100a75760a68082019082821067ffffffffffffffff831117610093579082916100b08339039083f0908115610088576020925060405191168152f35b6040513d84823e3d90fd5b634e487b7160e01b85526041600452602485fd5b8280fd5b5080fdfe60808060405234601457608c908161001a8239f35b600080fdfe60806040526004361015601157600080fd5b60003560e01c80633c323a1b14602f57635281244f14602f57600080fd5b3460515760403660031901126051576004356001600160a01b03811603605157005b600080fdfea26469706673582212209c803df7dccec29eba9153ddde95d3294535ad624069ba7342ce65d41af5ae6c64736f6c63430008140033a264697066735822122015ebb649935a7dd40b28119d7d6ded36a5c378c515191d93c218437acee9d0db64736f6c63430008140033";

type MockBerachainRewardsVaultFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBerachainRewardsVaultFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBerachainRewardsVaultFactory__factory extends ContractFactory {
  constructor(...args: MockBerachainRewardsVaultFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockBerachainRewardsVaultFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockBerachainRewardsVaultFactory__factory {
    return super.connect(runner) as MockBerachainRewardsVaultFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBerachainRewardsVaultFactoryInterface {
    return new Interface(_abi) as MockBerachainRewardsVaultFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockBerachainRewardsVaultFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockBerachainRewardsVaultFactory;
  }
}
