/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Rewards, RewardsInterface } from "../../contracts/Rewards";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "releaseAt",
        type: "uint256",
      },
    ],
    name: "Created",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "releaseAt",
        type: "uint256",
      },
    ],
    name: "Updated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_RELEASE_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "releaseAt",
        type: "uint256",
      },
    ],
    name: "createCycle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
    ],
    name: "cycles",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "getDigest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
    ],
    name: "releaseTimelines",
    outputs: [
      {
        internalType: "uint256",
        name: "releaseAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardDistributor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "setBEWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardDistributor",
        type: "address",
      },
    ],
    name: "setRewardDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "releaseAt",
        type: "uint256",
      },
    ],
    name: "updateCycle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a080604052346100cc57306080527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff8260401c166100bd57506001600160401b036002600160401b031982821601610078575b60405161206f90816100d28239608051818181611299015261133a0152f35b6001600160401b031990911681179091556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1388080610059565b63f92ee8a960e01b8152600490fd5b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c80630b2e19941461156b578063157dae521461154c5780632c1b35ac146115075780634f1ef286146112eb57806352d1902d14611284578063715018a61461121a57806371c0a1b2146111b857806373ababac146110935780638074b4c31461104f57806384b0196e14610f055780638519cdae14610b205780638aee812714610ad85780638da5cb5b14610aa2578063918f867414610a7e578063a1809b95146109f2578063acc2166a146109c9578063ad3cb1cc14610980578063b08f9c961461093e578063b9c7e6ce14610733578063c4d66de8146102e5578063d9caed121461020f578063f2fde38b146101df578063f7c618c1146101b35763fa031c501461012957600080fd5b346101af5760203660031901126101af576101426116ce565b61014a611ab2565b6001600160a01b0316918215610173575050600180546001600160a01b03191691909117905580f35b906020606492519162461bcd60e51b83528201526016602482015275496e76616c69642077616c6c6574206164647265737360501b6044820152fd5b8280fd5b5050346101db57816003193601126101db57905490516001600160a01b039091168152602090f35b5080fd5b833461020c57602036600319011261020c576102096101fc6116ce565b610204611ab2565b611a3e565b80f35b80fd5b509190346101db5760603660031901126101db5761022b6116ce565b6001600160a01b03602435818116959192908690036102e15760443592610250611ab2565b81169182156102a3575085859695949515600014610294575050828092819282821561028b575bf115610281575080f35b51903d90823e3d90fd5b506108fc610277565b91509192506102099350611c8c565b606490602086519162461bcd60e51b83528201526018602482015277496e76616c6964207265636569766572206164647265737360401b6044820152fd5b8480fd5b5090346101af576020908160031936011261072f576103026116ce565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009384549060ff82851c1615926001600160401b039283811680159081610727575b600114908161071d575b159081610714575b506107045767ffffffffffffffff1981166001178855846106e9575b506001600160a01b031691610388831515611919565b610390611e04565b610398611e04565b6103a133611a3e565b6103a9611e04565b8451916103b5836116fa565b600f83526e426572616c6c79205265776172647360881b878401528551926103dc846116fa565b60018452603160f81b888501526103f1611e04565b6103f9611e04565b80518381116106d657807fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029261042f8454611aeb565b601f8111610685575b508a908d601f84116001146106225792610617575b50508160011b916000199060031b1c19161790555b82519182116106045750807fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103926104998454611aeb565b601f81116105b6575b508790601f8311600114610553578a92610548575b50508160011b916000199060031b1c19161790555b85600080516020611fda833981519152558560008051602061201a8339815191525560018060a01b03193381600254161760025586541617855561050e578380f35b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29260ff60401b1981541690555160018152a13880808380f35b0151905038806104b7565b848b52888b209250601f1984168b5b8a8282106105a0575050908460019594939210610587575b505050811b0190556104cc565b015160001960f88460031b161c1916905538808061057a565b6001859682939686015181550195019301610562565b909150838a52878a20601f840160051c8101918985106105fa575b90601f859493920160051c01905b8181106105ec57506104a2565b8b81558493506001016105df565b90915081906105d1565b634e487b7160e01b895260419052602488fd5b01519050388061044d565b8581528c81209350601f198516905b8d82821061066f575050908460019594939210610656575b505050811b019055610462565b015160001960f88460031b161c19169055388080610649565b6001859682939686015181550195019301610631565b909150838d528a8d20601f840160051c8101918c85106106cc575b849392918f91601f0160051c0191905b8282106106be575050610438565b81558493506001018e6106b0565b90915081906106a0565b634e487b7160e01b8b526041835260248bfd5b6001600160481b0319166001600160401b0117875538610372565b855163f92ee8a960e01b81528390fd5b90501538610356565b303b15915061034e565b869150610344565b8380fd5b509190346101db576107443661169f565b600254919390916001600160a01b0390811633036108f05782156108b55761ffff8416808752602090600382528388209260ff881693848a528352848920541561088057818952898352848920848a5283528489205461084757885485516323b872dd60e01b8582015233602482015230604482015260648082018990528152911660a082016001600160401b03811183821017610834577f42941f3eca803d0494d55aef73819b319328e22e0d061abb04ae52a898bc6bef9a9b9287969594926108149261082e9a9952611d9c565b8a52815282892091895252818188205551938493846118fc565b0390a180f35b634e487b7160e01b8b5260418c5260248bfd5b845162461bcd60e51b8152808b018490526013602482015272105b1c9958591e48191a5cdd1c9a589d5d1959606a1b6044820152606490fd5b845162461bcd60e51b8152808b01849052600f60248201526e10de58db19481b9bdd08199bdd5b99608a1b6044820152606490fd5b815162461bcd60e51b81526020818901526015602482015274496e76616c696420726577617264732076616c756560581b6044820152606490fd5b815162461bcd60e51b8152602081890152602260248201527f556e617574686f72697a656420746f2064697374726962757465207265776172604482015261647360f01b6064820152608490fd5b5050346101db5760803660031901126101db5760209061097961095f611679565b61096761168f565b61096f6116e4565b906064359261195d565b9051908152f35b5050346101db57816003193601126101db5780516109c5916109a1826116fa565b60058252640352e302e360dc1b6020830152519182916020835260208301906117b9565b0390f35b5050346101db57816003193601126101db5760025490516001600160a01b039091168152602090f35b50346101af5760203660031901126101af57610a0c6116ce565b610a14611ab2565b6001600160a01b0316918215610a3d575050600280546001600160a01b03191691909117905580f35b906020606492519162461bcd60e51b8352820152601b60248201527a496e76616c6964206469737472696275746f72206164647265737360281b6044820152fd5b5050346101db57816003193601126101db576020905168056bc75e2d631000008152f35b5050346101db57816003193601126101db57600080516020611fba8339815191525490516001600160a01b039091168152602090f35b833461020c57602036600319011261020c57610af26116ce565b610afa611ab2565b6001600160a01b0316610b0e811515611919565b81546001600160a01b03191617815580f35b5090346101af5760803660031901126101af57610b3b611679565b91610b4461168f565b91846044938435936064908135966001600160401b03808911610f01573660238a011215610f015788830135908111610f0157602498898101908a833692010111610efd5761ffff8b169a8b88526020966003885289808a209960ff83169a8b82528a5220544210610ec757898e8e8152878a528181208b82528a52205415610e9857898e8e815260058a528181208b82528a528181203382528a522054610e64578a151580610e51575b15610e1d57908d93929160ff8b80518b81019087878337610c1e8d828a81018c83820152038084520182611746565b5190209687815260068c52205416610de157610c84928f603c90610c508f610c8d9c9b9a999896610c7e96339161195d565b7b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b8252601c5220923691611782565b90611cdb565b90969196611d17565b6001546001600160a01b039590861690861603610dae578b5260068552868b20805460ff19166001179055898b52818552868b20868c528552868b205498888a028a158b82048b141715610d9c5768056bc75e2d631000009004998a11610d5e578b7f7b848c1855e3c4f508c70d3a88af329663df83ee4536b7f86481e0f2a08ee9e860a08d8d8d8d8d8d610d43858f888c5260058452858c20858d528452858c20338d52845281868d205533908c5416611c8c565b8251958652850152339084015260608301526080820152a180f35b875162461bcd60e51b8152928301869052601e908301527f4f766572666c6f7720696e207265776172642063616c63756c6174696f6e000090820152fd5b50634e487b7160e01b8c52601183528bfd5b50865162461bcd60e51b81529182018590526011828a015270496e76616c6964207369676e617475726560781b90820152fd5b5050885162461bcd60e51b815294850187905250506016838a0152507514da59db985d1d5c9948185b1c9958591e481d5cd95960521b90820152fd5b5050875162461bcd60e51b81529384018690525050600f828901526e125b9d985b1a59081c195c98d95b9d608a1b90820152fd5b5068056bc75e2d631000008b1115610bef565b5050875162461bcd60e51b81529384018690525050600f828901526e105b1c9958591e4818db185a5b5959608a1b90820152fd5b5050875162461bcd60e51b81529384018690525050600a82890152694e6f207265776172647360b01b90820152fd5b5050875162461bcd60e51b815293840186905250506011828901527043616e206e6f7420636c61696d206e6f7760781b90820152fd5b8680fd5b8580fd5b5090346101af57826003193601126101af57600080516020611fda833981519152541580611038575b15610ffd57610f3b611b25565b92610f44611beb565b9082519260209260208501958587106001600160401b03881117610fea5750926020610fa0838896610f93998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b01906117b9565b91898303908a01526117b9565b924660608801523060808801528460a088015286840360c088015251928381520193925b828110610fd357505050500390f35b835185528695509381019392810192600101610fc4565b634e487b7160e01b845260419052602483fd5b906020606492519162461bcd60e51b835282015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152fd5b5060008051602061201a8339815191525415610f2e565b50346101af57816003193601126101af57602092829161106d611679565b9061ffff61107961168f565b92168352855260ff83832091168252845220549051908152f35b508290346101db576110a43661169f565b90926110ae611ab2565b61ffff83166110c1816107e911156117f9565b60ff8516918260011115806111ad575b6110da90611834565b6110e5428511611870565b6301e13380420180421161119a576110ff908511156118b9565b81875260036020528787208388526020524288882054111561116457509561082e929186977fab4527015d51491e63004f9deb479b16a810351281ed072ef393e467c781492f97526003602052818820908852602052818188205551938493846118fc565b606490602089519162461bcd60e51b8352820152601060248201526f105b1c9958591e481c995b19585cd95960821b6044820152fd5b634e487b7160e01b885260118252602488fd5b50600c8311156110d1565b5050346101db5760603660031901126101db57806020926111d7611679565b6111df61168f565b61ffff6111ea6116e4565b921683526005865283832060ff91909116835285528282206001600160a01b039091168252845220549051908152f35b833461020c578060031936011261020c57611233611ab2565b600080516020611fba83398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50913461020c578060031936011261020c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036112de5760209051600080516020611ffa8339815191528152f35b5163703e46dd60e11b8152fd5b5090806003193601126101af576113006116ce565b906024356001600160401b0381116102e157366023820112156102e1576113309036906024818701359101611782565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156114eb575b506114db57611373611ab2565b82516352d1902d60e01b81529084169360209182818881895afa8891816114a8575b506113b1578451634c9c8ce360e01b8152808801879052602490fd5b600080516020611ffa833981519152969295919396908181036114925750833b1561147b5780546001600160a01b0319168217905583518792917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a286511561145e57505080858561145097519101845af4913d15611454573d61144261143982611767565b92519283611746565b81528581943d92013e611ecb565b5080f35b5060609250611ecb565b945094505050503461146f57505080f35b63b398979f60e01b8152fd5b8451634c9c8ce360e01b8152808401839052602490fd5b83602491875191632a87526960e21b8352820152fd5b9091508381813d83116114d4575b6114c08183611746565b810103126114d057519038611395565b8880fd5b503d6114b6565b825163703e46dd60e11b81528590fd5b905081600080516020611ffa8339815191525416141538611366565b5050346101db57806003193601126101db5780602092611525611679565b61ffff61153061168f565b911682526003855260ff83832091168252845220549051908152f35b5050346101db57816003193601126101db57602090516301e133808152f35b508290346101db5761157c3661169f565b9092611586611ab2565b61ffff8316611599816107e911156117f9565b60ff85169182600111158061166e575b6115b290611834565b6115bd428511611870565b6301e13380420180421161119a576115d7908511156118b9565b81875260036020528787208388526020528787205461163957509561082e929186977f453616f95b460f955c1c70c443f919ad210bda74ce4b9b41878e5934ac778d8797526003602052818820908852602052818188205551938493846118fc565b606490602089519162461bcd60e51b8352820152600f60248201526e105b1c9958591e4818dc99585d1959608a1b6044820152fd5b50600c8311156115a9565b6004359061ffff8216820361168a57565b600080fd5b6024359060ff8216820361168a57565b606090600319011261168a5760043561ffff8116810361168a579060243560ff8116810361168a579060443590565b600435906001600160a01b038216820361168a57565b604435906001600160a01b038216820361168a57565b604081019081106001600160401b0382111761171557604052565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b0382111761171557604052565b90601f801991011681019081106001600160401b0382111761171557604052565b6001600160401b03811161171557601f01601f191660200190565b92919261178e82611767565b9161179c6040519384611746565b82948184528183011161168a578281602093846000960137010152565b919082519283825260005b8481106117e5575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016117c4565b1561180057565b60405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103cb2b0b960a11b6044820152606490fd5b1561183b57565b60405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840dadedce8d609b1b6044820152606490fd5b1561187757565b60405162461bcd60e51b815260206004820152601a60248201527952656c656173652074696d65206e6f7420696e2066757475726560301b6044820152606490fd5b156118c057565b60405162461bcd60e51b81526020600482015260146024820152732932b632b0b9b2903a34b6b2903a37b7903330b960611b6044820152606490fd5b60ff60409295949361ffff60608401971683521660208201520152565b1561192057565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606490fd5b919260429360ff6040519361ffff60208601967fb8b758361d5e84380ef1e632f89d8e76a8677dbc3f4b93a4f9d75d2a6048f312885216604086015216606084015260018060a01b0316608083015260a082015260a081526119be8161172b565b5190206119c9611f2e565b6119d1611f86565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152611a208161172b565b519020906040519161190160f01b8352600283015260228201522090565b6001600160a01b03908116908115611a9957600080516020611fba83398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b604051631e4fbdf760e01b815260006004820152602490fd5b600080516020611fba833981519152546001600160a01b03163303611ad357565b60405163118cdaa760e01b8152336004820152602490fd5b90600182811c92168015611b1b575b6020831014611b0557565b634e487b7160e01b600052602260045260246000fd5b91607f1691611afa565b604051906000827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102918254611b5981611aeb565b90818452602094600191600181169081600014611bc95750600114611b8a575b505050611b8892500383611746565b565b600090815285812095935091905b818310611bb1575050611b889350820101388080611b79565b85548884018501529485019487945091830191611b98565b92505050611b8894925060ff191682840152151560051b820101388080611b79565b604051906000827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103918254611c1f81611aeb565b90818452602094600191600181169081600014611bc95750600114611c4d57505050611b8892500383611746565b600090815285812095935091905b818310611c74575050611b889350820101388080611b79565b85548884018501529485019487945091830191611c5b565b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448083019390935291815260808101916001600160401b0383118284101761171557611b8892604052611d9c565b8151919060418303611d0c57611d0592506020820151906060604084015193015160001a90611e45565b9192909190565b505060009160029190565b6004811015611d865780611d29575050565b60018103611d435760405163f645eedf60e01b8152600490fd5b60028103611d645760405163fce698f760e01b815260048101839052602490fd5b600314611d6e5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b906000602091828151910182855af115611df8576000513d611def57506001600160a01b0381163b155b611dcd5750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415611dc6565b6040513d6000823e3d90fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615611e3357565b604051631afcd79f60e31b8152600490fd5b91906fa2a8918ca85bafe22016d0b997e4df60600160ff1b038411611ebf57926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15611eb35780516001600160a01b03811615611eaa57918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b90611ef25750805115611ee057805190602001fd5b60405163d6bda27560e01b8152600490fd5b81511580611f25575b611f03575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15611efb565b611f36611b25565b8051908115611f46576020012090565b5050600080516020611fda833981519152548015611f615790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b611f8e611beb565b8051908115611f9e576020012090565b505060008051602061201a833981519152548015611f61579056fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101a26469706673582212203954da8178b096a982c8c3c13a6eae32e1ea3306ffa9cd2a9bcea007fa2b8e5a64736f6c63430008180033";

type RewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rewards__factory extends ContractFactory {
  constructor(...args: RewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Rewards & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Rewards__factory {
    return super.connect(runner) as Rewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsInterface {
    return new Interface(_abi) as RewardsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Rewards {
    return new Contract(address, _abi, runner) as unknown as Rewards;
  }
}
